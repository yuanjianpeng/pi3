KERNEL_NAME := $(wildcard linux-*)
KERNEL_VERSION := $(KERNEL_NAME:linux-%=%)
UBOOT_NAME := $(wildcard u-boot-*)
KERNEL_DIR := $(TOP_DIR)/$(KERNEL_NAME)
UBOOT_DIR := $(TOP_DIR)/$(UBOOT_NAME)
TARGET_DIR := $(TOP_DIR)/target
USERSPACE_DIR := $(TOP_DIR)/userspace
HOSTTOOLS_DIR := $(TOP_DIR)/hosttools
SCRIPT_DIR := $(TOP_DIR)/scripts
OUTPUT_DIR := $(TOP_DIR)/output
TOOLCHAIN_DIR = $(TOP_DIR)/toolchain

TOOLCHAIN_TAR_BALL := $(TOOLCHAIN_DIR)/aarch64-rpi3-linux-gnueabi.tar.bz2

TOOLCHAIN_INSTALL_DIR := /work/toolchain
TOOLCHAIN_NAME := aarch64-rpi3-linux-gnueabi
TOOLCHAIN := $(TOOLCHAIN_INSTALL_DIR)/$(TOOLCHAIN_NAME)
TOOLCHAIN_BIN_PREFIX := $(TOOLCHAIN)/bin/$(TOOLCHAIN_NAME)-
TOOLCHIAN_SYSROOT_DIR := $(TOOLCHAIN)/$(TOOLCHAIN_NAME)/sysroot

CC=${TOOLCHAIN_BIN_PREFIX}gcc
AS=${TOOLCHAIN_BIN_PREFIX}as
CPP=${TOOLCHAIN_BIN_PREFIX}cpp
LD=${TOOLCHAIN_BIN_PREFIX}ld
STRIP=${TOOLCHAIN_BIN_PREFIX}strip
OBJDUMP=${TOOLCHAIN_BIN_PREFIX}objdump
OBJCOPY=${TOOLCHAIN_BIN_PREFIX}objcopy
READELF=${TOOLCHAIN_BIN_PREFIX}readelf
RANLIB=${TOOLCHAIN_BIN_PREFIX}ranlib
SIZE=${TOOLCHAIN_BIN_PREFIX}size
STIRNGS=${TOOLCHAIN_BIN_PREFIX}string
AR=${TOOLCHAIN_BIN_PREFIX}ar
NM=${TOOLCHAIN_BIN_PREFIX}nm
ADDR2LINE=${TOOLCHAIN_BIN_PREFIX}addr2line

# create output dir
$(shell [ ! -d $(OUTPUT_DIR) ] && mkdir $(OUTPUT_DIR))

ifeq ($(JOBS),)
JOBS := $(shell nproc || echo 1)
endif


BUILDTIME := $(SCRIPT_DIR)/buildtime.sh $(OUTPUT_DIR)
INSTALL := install
INSTALL_DIR := $(SCRIPT_DIR)/install_dir.sh


UBOOT_BUILD_DIR := $(OUTPUT_DIR)/$(UBOOT_NAME)
KERNEL_BUILD_DIR := $(OUTPUT_DIR)/${KERNEL_NAME}
KERNEL_MODULES_INSTALL_DIR := $(OUTPUT_DIR)/modules
USERSPACE_BUILD_DIR := $(OUTPUT_DIR)/userspace
STAGING_DIR := $(OUTPUT_DIR)/staging

FS_INSTALL_DIR := $(OUTPUT_DIR)/fs.install
FS_MODULES_DIR := $(OUTPUT_DIR)/fs.modules
FS_ROOT_DIR := $(OUTPUT_DIR)/fs.root
FS_COMMON_DIR := $(TARGET_DIR)/fs.common
FS_LIBC_DIR := $(OUTPUT_DIR)/fs.libc

ARCH=arm64